/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package graficos.so;

import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author moiseslaris
 */
public class Window extends javax.swing.JFrame {

    Ajustes obj;
    int cont=0;
    /**
     * Creates new form Window
     */
    public Window() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        Tabla2 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        Tabla1 = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        Tabla3 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        MemoriaTotal = new javax.swing.JTextField();
        MemoriaP = new javax.swing.JTextField();
        CuantosP = new javax.swing.JTextField();
        CuantosEj = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        Comenzar = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        Primer = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        Peor = new javax.swing.JTextArea();
        jScrollPane6 = new javax.swing.JScrollPane();
        Mejor = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Tabla2.setBackground(new java.awt.Color(204, 204, 255));
        Tabla2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Memoria", "Cuantos"
            }
        ));
        jScrollPane2.setViewportView(Tabla2);

        Tabla1.setBackground(new java.awt.Color(204, 255, 204));
        Tabla1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Memoria", "Cuantos"
            }
        ));
        jScrollPane3.setViewportView(Tabla1);

        Tabla3.setBackground(new java.awt.Color(255, 204, 204));
        Tabla3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Memoria", "Cuantos"
            }
        ));
        jScrollPane4.setViewportView(Tabla3);

        jLabel1.setText("Primer Ajuste");

        jLabel2.setText("Mejor Ajuste");

        jLabel3.setText("Peor Ajuste");

        MemoriaTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MemoriaTotalActionPerformed(evt);
            }
        });

        CuantosP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CuantosPActionPerformed(evt);
            }
        });

        jLabel4.setText("Memoria Total");

        jLabel5.setText("Memoria por Proceso");

        jLabel6.setText("Cuantos por Proceso");

        jLabel7.setText("Cuantos de Ejecuci√≥n");

        jLabel8.setText("Tiempo de Ejecucion");

        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });

        Comenzar.setText("Comenzar");
        Comenzar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComenzarActionPerformed(evt);
            }
        });

        jLabel9.setText("Sig. Proceso: ");

        jTextField6.setEditable(false);

        Primer.setColumns(20);
        Primer.setRows(5);
        jScrollPane1.setViewportView(Primer);

        Peor.setColumns(20);
        Peor.setRows(5);
        jScrollPane5.setViewportView(Peor);

        Mejor.setColumns(20);
        Mejor.setRows(5);
        jScrollPane6.setViewportView(Mejor);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(Comenzar)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField5))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(21, 21, 21)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel4)
                                                .addGap(40, 40, 40))
                                            .addComponent(jLabel5)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(jLabel7)))
                                .addGap(12, 12, 12))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CuantosP)
                            .addComponent(MemoriaP)
                            .addComponent(MemoriaTotal)
                            .addComponent(CuantosEj)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 366, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(MemoriaTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(MemoriaP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(CuantosP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(CuantosEj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7))
                                .addGap(11, 11, 11)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(87, 87, 87)
                                .addComponent(Comenzar)))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel9))
                            .addComponent(jScrollPane1)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CuantosPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CuantosPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CuantosPActionPerformed

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5ActionPerformed
    
    public void pr() throws InterruptedException{
        ArrayList<Lista> Lista=new ArrayList<Lista>();
        Comenzar.setEnabled(false);
        cont=0;
       
        int Mt,Mp,Ct,Ce,T;
        int proceso,cuantos;
        
        
        //Primer Ajuste__________________________________
        obj= new Ajustes();
        Mt=Integer.parseInt(MemoriaTotal.getText());
        Mp=Integer.parseInt(MemoriaP.getText());
        Ct=Integer.parseInt(CuantosP.getText());
        Ce=Integer.parseInt(CuantosEj.getText());
        T= Integer.parseInt(jTextField5.getText());
        
        obj.setMemoriaT(Mt);
        obj.setMemoriaP(Mp);
        obj.setCuantosT(Ct);
        obj.setCuantoEj(Ce);
        obj.setTiempo(T);
        
        
        while(obj.getTiempo()>=0){
            proceso = (int) (Math.random() * obj.getMemoriaP()+ 1);
            cuantos = (int) (Math.random() * obj.getCuantosT()+ 1);
        
                    
                    obj.agregar2(proceso,cuantos);
                    if(obj.in()==true){
                       Primer.setText("Entra proceso: ["+obj.getV().get(obj.getV().size()-2).getId()+","+obj.getV().get(obj.getV().size()-2).getMemoria()+","+obj.getV().get(obj.getV().size()-2).getCuantos()+"]");
                    }
                    llenarTabla();
                    //Thread.sleep(1000);
           
                    obj.ejecutar();
                    ejecutar();
                    obj.time();
                    obj.porcentaje();
                    //llenarTabla();
                    //Thread.sleep(1000);
        
        
        
        }
        estadisticas();

        //Fin primer ajuste______________________________
        //Mejor ajuste __________________________________
        cont++;
        obj= new Ajustes();
        Mt=Integer.parseInt(MemoriaTotal.getText());
        Mp=Integer.parseInt(MemoriaP.getText());
        Ct=Integer.parseInt(CuantosP.getText());
        Ce=Integer.parseInt(CuantosEj.getText());
        T= Integer.parseInt(jTextField5.getText());
        
        obj.setMemoriaT(Mt);
        obj.setMemoriaP(Mp);
        obj.setCuantosT(Ct);
        obj.setCuantoEj(Ce);
        obj.setTiempo(T);
        
        
        while(obj.getTiempo()>=0){
            proceso = (int) (Math.random() * obj.getMemoriaP()+ 1);
            cuantos = (int) (Math.random() * obj.getCuantosT()+ 1);
        
                    
                    obj.agregar(proceso,cuantos);
                    if(obj.in()==true){
                       Mejor.setText("Entra proceso: ["+obj.getV().get(obj.getV().size()-2).getId()+","+obj.getV().get(obj.getV().size()-2).getMemoria()+","+obj.getV().get(obj.getV().size()-2).getCuantos()+"]");
                    }
                    llenarTabla();
           
                    obj.ejecutar();
                    ejecutar();
                    obj.time();
                    obj.porcentaje();
                    llenarTabla();
        
        
        
        }
        estadisticas();
        //Fin de mejor Ajuste
        //Peor Ajuste___________________-
        cont++;
        obj= new Ajustes();
        Mt=Integer.parseInt(MemoriaTotal.getText());
        Mp=Integer.parseInt(MemoriaP.getText());
        Ct=Integer.parseInt(CuantosP.getText());
        Ce=Integer.parseInt(CuantosEj.getText());
        T= Integer.parseInt(jTextField5.getText());
        
        obj.setMemoriaT(Mt);
        obj.setMemoriaP(Mp);
        obj.setCuantosT(Ct);
        obj.setCuantoEj(Ce);
        obj.setTiempo(T);
        
        
        while(obj.getTiempo()>=0){
            proceso = (int) (Math.random() * obj.getMemoriaP()+ 1);
            cuantos = (int) (Math.random() * obj.getCuantosT()+ 1);
        
                    
                    obj.agregar2(proceso,cuantos);
                    if(obj.in()==true){
                       Peor.setText("Entra proceso: ["+obj.getV().get(obj.getV().size()-2).getId()+","+obj.getV().get(obj.getV().size()-2).getMemoria()+","+obj.getV().get(obj.getV().size()-2).getCuantos()+"]");
                    }
                    llenarTabla();
           
                    obj.ejecutar();
                    ejecutar();
                    obj.time();
                    obj.porcentaje();
                    llenarTabla();
        
        }
        estadisticas();
        
        //Fin peor ajuste_______________________________
        
        Comenzar.setEnabled(true);
    }
    private void ComenzarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComenzarActionPerformed
        new Thread(){
        public void run() {
            try {
                pr();
            } catch (InterruptedException ex) {
                Logger.getLogger(Window.class.getName()).log(Level.SEVERE, null, ex);
            }
        };
    }.start();
    }//GEN-LAST:event_ComenzarActionPerformed
    
    public void estadisticas(){
        if(cont==0)
            Primer.setText("Procesos atendidos: "+obj.getT().size()+"\nTiempo medio de ejecuci√≥n de procesos: "+ obj.TM()+ " cuantos"+"\nPorcentaje de uso de memoria: "+obj.getPorcentaje()/obj.getCont() +"%");
        if(cont==1)
            Mejor.setText("Procesos atendidos: "+obj.getT().size()+"\nTiempo medio de ejecuci√≥n de procesos: "+ obj.TM()+ " cuantos"+"\nPorcentaje de uso de memoria: "+obj.getPorcentaje()/obj.getCont() +"%");
        if(cont==2)
            Peor.setText("Procesos atendidos: "+obj.getT().size()+"\nTiempo medio de ejecuci√≥n de procesos: "+ obj.TM()+ " cuantos"+"\nPorcentaje de uso de memoria: "+obj.getPorcentaje()/obj.getCont() +"%");

    }
    
    public void ejecutar(){
        if(cont==0){
        int i=obj.getVamos();
        if(i!=-1){       
        Primer.setText("Cargando..."); //Aqui podemos poner un delay para que se vea bonito
        Primer.setText("Ejecutando: ["+obj.getV().get(i).getId()+","+obj.getV().get(i).getMemoria()+","+obj.getV().get(i).getCuantos()+"]");
        Primer.setText("Descargando");
        }
        }
        if(cont==1){
        int i=obj.getVamos();
        if(i!=-1){       
        Mejor.setText("Cargando..."); //Aqui podemos poner un delay para que se vea bonito
        Mejor.setText("Ejecutando: ["+obj.getV().get(i).getId()+","+obj.getV().get(i).getMemoria()+","+obj.getV().get(i).getCuantos()+"]");
        Mejor.setText("Descargando");
        }
        }
        if(cont==2){
        int i=obj.getVamos();
        if(i!=-1){       
        Peor.setText("Cargando..."); //Aqui podemos poner un delay para que se vea bonito
        Peor.setText("Ejecutando: ["+obj.getV().get(i).getId()+","+obj.getV().get(i).getMemoria()+","+obj.getV().get(i).getCuantos()+"]");
        Peor.setText("Descargando");
        }
        }
    }
    
    public void llenarTabla(){
       
        int n=obj.getV().size();
       
            
        String []titulos = {"Id","Memoria","Cuantos"};
        String data[][]=new String[n][3];
        

        for(int i=0;i<n;i++){
            Procesos aux=obj.getV().get(i);
            data[i][0]=Integer.toString(aux.getId());
            data[i][1]=Integer.toString(aux.getMemoria());
            data[i][2]=Integer.toString(aux.getCuantos());
            
        }
        DefaultTableModel dataModel=new DefaultTableModel(data, titulos);
       
        if(cont==0)
            Tabla1.setModel(dataModel);
        if(cont==1)
            Tabla2.setModel(dataModel);
        if(cont==2)
            Tabla3.setModel(dataModel);
  
    }
    
    private void MemoriaTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MemoriaTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MemoriaTotalActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Comenzar;
    private javax.swing.JTextField CuantosEj;
    private javax.swing.JTextField CuantosP;
    private javax.swing.JTextArea Mejor;
    private javax.swing.JTextField MemoriaP;
    private javax.swing.JTextField MemoriaTotal;
    private javax.swing.JTextArea Peor;
    private javax.swing.JTextArea Primer;
    private javax.swing.JTable Tabla1;
    private javax.swing.JTable Tabla2;
    private javax.swing.JTable Tabla3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    // End of variables declaration//GEN-END:variables
}
